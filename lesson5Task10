using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Chrome;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;

namespace csharpproject
{
    public class PriceExcection : ApplicationException
    {
        public PriceExcection() { }
        public PriceExcection(string message) : base(message) { }
        public PriceExcection(string messga, PriceExcection inner) : base(messga, inner) { }
        protected PriceExcection(SerializationInfo info, StreamingContext context) : base(info, context) { }

    }
    [TestFixture]
    public class UnitTest10
    {
       // private FirefoxOptions options;   
        private IWebDriver driver;
        private WebDriverWait wait;
        private string nameProdmain;
        private string regular_price_main;
        private string color_regular_price_main;
        private string comp_color_regular = "rgba(51, 51, 51, 1)";
        private string decor_regular_price_main;
        private string size_regular_price_main;
        private string campaign_price_main;
        private string color_campaign_price_main;
        private string weight_cmpaign_price_main;
        private string size_cmpaign_price_main;
        private IWebElement divProduct;

        [SetUp]
        public void TestMethod1()
        {
          /*  options = new FirefoxOptions();
             options.UseLegacyImplementation = false;
             options.BrowserExecutableLocation = @"C:\Program Files\Mozilla Firefox\firefox.exe";
             driver = new FirefoxDriver(options); */
            driver = new ChromeDriver();
            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
        }
        [Test]
        public void product()
        {
            driver.Url = "http://localhost/litecart/en/";

            divProduct = driver.FindElement(By.XPath("//div[@id='box-campaign-products']//div[@class='col-xs-6 col-sm-4 col-md-3']"));
            nameProdmain = divProduct.FindElement(By.XPath(".//div[@class='name']")).GetAttribute("textContent");
            regular_price_main = divProduct.FindElement(By.XPath(".//s[@class='regular-price']")).GetAttribute("textContent");
            color_regular_price_main = divProduct.FindElement(By.XPath(".//s[@class='regular-price']")).GetCssValue("color");
            if (comp_color_regular != color_regular_price_main)
                throw new PriceExcection("Not the correct color of the regular price on the main page");
            decor_regular_price_main = divProduct.FindElement(By.XPath(".//s[@class='regular-price']")).GetCssValue("text-decoration");
            if (!decor_regular_price_main.Contains("line-through"))
                throw new PriceExcection("The price is not crossed out");
            size_regular_price_main = divProduct.FindElement(By.XPath(".//s[@class='regular-price']")).GetCssValue("font-size");
            int value_size_regular_price = Convert.ToInt32(Regex.Replace(size_regular_price_main, @"[^\d]+", ""));
            campaign_price_main = divProduct.FindElement(By.XPath(".//strong[@class='campaign-price']")).GetAttribute("textContent");
            color_campaign_price_main = divProduct.FindElement(By.XPath(".//strong[@class='campaign-price']")).GetCssValue("color");
            weight_cmpaign_price_main = divProduct.FindElement(By.XPath(".//strong[@class='campaign-price']")).GetCssValue("font-weight");
            size_cmpaign_price_main = divProduct.FindElement(By.XPath(".//strong[@class='campaign-price']")).GetCssValue("font-size");
            int value_size_cmpaign_price = Convert.ToInt32(Regex.Replace(size_cmpaign_price_main, @"[^\d]+", ""));
            if (value_size_cmpaign_price < value_size_regular_price)
                throw new PriceExcection("Promotional price is less than the regular price");
        }
        [TearDown]
        public void Stop()
        {
            driver.Quit();
            driver = null;
        }
    }
}
